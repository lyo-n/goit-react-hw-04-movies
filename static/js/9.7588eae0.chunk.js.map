{"version":3,"sources":["components/review/review.jsx"],"names":["Reviews","state","reviews","API","reviewsMovies","this","props","match","params","movieId","then","setState","length","map","review","author","content","id","Component"],"mappings":"wNAGqBA,E,4MACnBC,MAAQ,CAAEC,QAAS,I,kEAEE,IAAD,OAClBC,IACGC,cAAcC,KAAKC,MAAMC,MAAMC,OAAOC,SACtCC,MAAK,SAAAR,GAAO,OAAI,EAAKS,SAAL,eAAmBT,S,+BAG9B,IACAA,EAAYG,KAAKJ,MAAjBC,QACR,OACE,mCACGA,GAAWA,EAAQU,OAAS,EAC3B,6BACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,6BACE,qCACE,0CAAaA,EAAOC,UACpB,4BAAID,EAAOE,cAHNF,EAAOG,SASpB,yE,GAzB2BC","file":"static/js/9.7588eae0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport API from '../../service/API';\r\n\r\nexport default class Reviews extends Component {\r\n  state = { reviews: [] };\r\n\r\n  componentDidMount() {\r\n    API\r\n      .reviewsMovies(this.props.match.params.movieId)\r\n      .then(reviews => this.setState({ ...reviews }));\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <>\r\n        {reviews && reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <>\r\n                  <h3>Author: {review.author}</h3>\r\n                  <p>{review.content}</p>\r\n                </>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>there is no reviews for this movie</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}