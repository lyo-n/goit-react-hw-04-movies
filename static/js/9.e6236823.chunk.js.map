{"version":3,"sources":["components/review/review.jsx"],"names":["Reviews","tate","reviews","API","fetchMovieReviews","this","props","match","params","movieId","then","setState","state","length","map","review","author","content","id","Component"],"mappings":"gNAGqBA,E,4MACjBC,KAAO,CACHC,QAAS,I,kEAGQ,IAAD,OAChBC,IACCC,kBAAkBC,KAAKC,MAAMC,MAAMC,OAAOC,SAC1CC,MAAK,SAAAR,GAAO,OAAI,EAAKS,SAAS,CAAET,iB,+BAG3B,IACEA,EAAYG,KAAKO,MAAjBV,QACZ,OACE,mCACGA,EAAQW,OAAS,EAChB,6BACGX,EAAQY,KAAI,SAAAC,GAAM,OACjB,6BACE,qCACE,0CAAaA,EAAOC,UACpB,4BAAID,EAAOE,cAHNF,EAAOG,SASpB,yE,GA3B2BC","file":"static/js/9.e6236823.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport API from '../../service/API';\r\n\r\nexport default class Reviews extends Component {\r\n    tate = {\r\n        reviews: [] \r\n    };\r\n\r\n    componentDidMount() {\r\n        API\r\n        .fetchMovieReviews(this.props.match.params.movieId)\r\n        .then(reviews => this.setState({ reviews }));\r\n    }\r\n\r\n    render() {\r\n        const { reviews } = this.state;\r\n    return (\r\n      <>\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map(review => (\r\n              <li key={review.id}>\r\n                <>\r\n                  <h3>Author: {review.author}</h3>\r\n                  <p>{review.content}</p>\r\n                </>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>there is no reviews for this movie</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}"],"sourceRoot":""}